/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN Customer_accountActionsGenerated.js PLEASE EDIT ../Customer_accountActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import Customer_accountApi from "../../../api/Customer_accountApi";

let actionsFunction = {
  
  // Reset reducer
  reset: function() {
    return { type: types.RESET_CUSTOMER_ACCOUNT };
  },

  //CRUD METHODS

  // Create customer_account
  createCustomer_account: function(customer_account) {
    return function(dispatch) {
      return Customer_accountApi
        .createCustomer_account(customer_account)
        .then(customer_account => {
          dispatch(actionsFunction.createCustomer_accountSuccess(customer_account));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createCustomer_accountSuccess: function(customer_account) {
    return { type: types.CREATE_CUSTOMER_ACCOUNT_SUCCESS, payload: customer_account };
  },


  // Delete customer_account
  deleteCustomer_account: function(id) {
    return function(dispatch) {
      return Customer_accountApi
        .deleteCustomer_account(id)
        .then(customer_account => {
          dispatch(actionsFunction.deleteCustomer_accountSuccess(customer_account));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteCustomer_accountSuccess: function(customer_account) {
    return { type: types.DELETE_CUSTOMER_ACCOUNT_SUCCESS, payload: customer_account };
  },


  // Find by account_id
  findByaccount_id: function(key) {
    return function(dispatch) {
      return Customer_accountApi
        .findByaccount_id(key)
        .then(item => {
          dispatch(actionsFunction.findByaccount_idSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findByaccount_idSuccess: function(item) {
    return { type: types.FINDBYACCOUNT_ID_CUSTOMER_ACCOUNT_SUCCESS, payload: item };
  },


  // Get customer_account
  loadCustomer_account: function(id) {
    return function(dispatch) {
      return Customer_accountApi
        .getOneCustomer_account(id)
        .then(customer_account => {
          dispatch(actionsFunction.loadCustomer_accountSuccess(customer_account));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadCustomer_accountSuccess: function(customer_account) {
    return { type: types.GET_CUSTOMER_ACCOUNT_SUCCESS, payload: customer_account };
  },

  // Load  list
  loadCustomer_accountList: function() {
    return function(dispatch) {
      return Customer_accountApi
        .getCustomer_accountList()
        .then(list => {
          dispatch(actionsFunction.loadCustomer_accountListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadCustomer_accountListSuccess: function(list) {
    return { type: types.LIST_CUSTOMER_ACCOUNT_SUCCESS, payload: list };
  },

	
  // Save customer_account
  saveCustomer_account: function(customer_account) {
    return function(dispatch) {
      return Customer_accountApi
        .saveCustomer_account(customer_account)
        .then(customer_account => {
          dispatch(actionsFunction.saveCustomer_accountSuccess(customer_account));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveCustomer_accountSuccess: function(customer_account) {
    return { type: types.UPDATE_CUSTOMER_ACCOUNT_SUCCESS, payload: customer_account };
  },


};

export default actionsFunction;
